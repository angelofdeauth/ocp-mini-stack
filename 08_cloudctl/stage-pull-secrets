#!/bin/bash
# Guidance for collecting prerequisites
# Create a developer.redhat.com account @ https://developers.redhat.com/register/
# Login @ https://cloud.redhat.com/openshift/install/metal/user-provisioned
clear
#################################################################################
# Logging Function
echo_log () {
  if [[ $1 == "0" ]]; then
	  echo "    >> $2 "
  elif [[ $1 == "2" ]]; then
	  echo "WARN>> $2 "
  elif [[ $1 == "1" ]]; then
	  echo "ERR >> $2"
	  echo "ERR >> Critical Exiting!"
          exit 1
  fi
}
#################################################################################
run_final_stash_all () {
cat <<EOF >~/.ccio/ocp-mini-stack/secrets
#!/bin/bash
secret_SSHPUBKEY=\'$(cat ~/.ssh/id_rsa.pub)\'
secret_PULLSECRET=\'${secret_PULLSECRET}\'
EOF

echo_log 0 "OK! All secrets are stashed at $HOME/.ccio/ocp-mini-stack/secrets"
}

#################################################################################
prompt_cps () {
echo_log 0 "On the Cluster Manager portal, find and click: 'Copy Pull Secret'"
read -srp "    >> Please paste your pull secret .. (paste is masked): " secret_PULLSECRET
echo
}

#################################################################################
check_dev_acct () {
echo
echo_log 0 "You will need one of the following accounts:"
echo_log 0 "      https://access.redhat.com" 
echo_log 0 "      https://developers.redhat.com << (free account)"
while true; do
  read -rp "    >> Do you have a redhat.com access or developer account? (yes/no): " yn
    case $yn in
      [Yy]* ) echo_log 0 "Go ahead and open the RH Cluster Manager Portal:" ; 
              echo_log 0 "    https://cloud.redhat.com/openshift/install/metal/user-provisioned" ; 
              break
              ;;
      [Nn]* ) echo_log 1 "Please try again once you have an access or developer account..."
              ;;
          * ) echo "$SEP_2 Please answer yes or no." ;;
    esac
  break
done
echo
}

#################################################################################
run_ssh_keygen () {
echo_log 0 'Creating new ssh keys...'

  # Generate ssh keys
  ssh-keygen -b 4086 -t rsa -f ~/.ssh/id_rsa -q -P "" 
}

#################################################################################
check_sshpubkey () {
echo_log 0 "Checking for ssh keys ..."
  # Check for SSH pub key to deploy
  # Offer to creat keys if not exist
  # Fail if no keys & no accept gen keys
  if [[ -f ~/.ssh/id_rsa.pub ]]; then
    echo_log 0 "Success! Detected $HOME/.ssh/id_rsa.pub"

  elif [[ ! -f ~/.ssh/id_rsa.pub ]]; then
    echo_log 2 "No public ssh key detected @ $HOME/.ssh/id_rsa.pub"
    echo_log 2 "SSH Keys are required to continue!
             "
    while true; do
      read -rp "    Would you like to create new keys now? " yn
        case $yn in
          [Yy]* ) echo_log 2 "Creating new ssh keys for cluster management..." ; 
                  run_ssh_keygen
                  break
                ;;
          [Nn]* ) echo_log 1 "Aborting due to user input!"
                ;;
              * ) echo "$SEP_2 Please answer yes or no." ;;
        esac
      break
    done
  fi
}

#################################################################################
check_safety () {
  # Check for preconfigured secrets file
  if [[ -f ~/.ccio/ocp-mini-stack/secrets ]]; then
    echo_log 2 "Found pre-existing mini-stack secrets file!"
    echo_log 2 "Continuing will overwrite $HOME/.ccio/ocp-mini-stack/secrets!
    "
    while true; do
      read -rp "    Do you want to continue writing a new secrets file?? (yes/no): " yn
        case $yn in
          [Yy]* ) echo_log 0 "Continuing" ; 
                  break
                ;;
          [Nn]* ) echo_log 1 "Aborting due to user input!"
                ;;
              * ) echo "$SEP_2 Please answer yes or no." ;;
        esac
      break
    done
  fi
  mkdir -p ~/.ccio/ocp-mini-stack
}

#################################################################################
run_info () {
echo_log 0 '
    This will walk you through staging the secrets
    required to generate your RHCOS Ignition configuration data.
    
    RHCOS Ignition prep reqires all of the following:
      1. SSH RSA public key @ ~/.ssh/id_rsa.pub

      2. A Developer or Subscription account:
            Sign up   @ https://developers.redhat.com/register/ 
            Or login  @ https://access.redhat.com

      3. The UPI OpenShift Cluster Manager Portal:
            Open      @ https://cloud.redhat.com/openshift/install/metal/user-provisioned
'
}

#################################################################################
run_core () {
run_info
check_safety
check_sshpubkey 
check_dev_acct
prompt_cps
run_final_stash_all
}

run_core
